plugins {
    id 'java'
}

dependencies {
    def acsPackageVersion = project.property("acsPackageVersion")
    System.out.println("acsPackageVersion webscripts: "+acsPackageVersion)
    compileOnly platform ("org.alfresco:acs-community-packaging:${acsPackageVersion}")

    compileOnly('org.springframework:spring-core') { transitive = false }
    compileOnly('org.springframework:spring-beans') { transitive = false }
    compileOnly('org.springframework:spring-aop') { transitive = false }
    compileOnly('org.springframework:spring-web') { transitive = false }

    compileOnly("org.alfresco:alfresco-data-model")
    compileOnly("org.alfresco.surf:spring-webscripts")
    compileOnly("org.alfresco.surf:spring-surf-core") { transitive = false }

    // Find a solution to hide AbstractBundleResourceHandler from the API
    // and we can drop this dependency
    compileOnly "org.osgi:org.osgi.core:${project.ext.osgiVersion}"

    compileOnly "javax.servlet:servlet-api:2.5"

    compileOnly('org.apache.httpcomponents:httpcore') { transitive = false }
    compileOnly('org.json:json') { transitive = false }

    compileOnly 'com.google.code.findbugs:jsr305:2.0.1'

    compileOnly "javax.annotation:javax.annotation-api:${javaxAnnotationApiVersion}"
    if (acsPackageVersion.toString().startsWith("7")) {
        System.out.println("Using webscripts-70")
        compileOnly project(':webscripts:webscripts-70')
    }
    else if (acsPackageVersion.toString().startsWith("6")) {
        System.out.println("Using webscripts-6x")
        compileOnly project(':webscripts:webscripts-6x')
    }
    else {
        System.out.println("Not using any webscripts subproject")
    }
}

subprojects {
    apply plugin: 'java'
    dependencies {
        System.out.println("acsPackageVersion integrations-tests subprojects: "+acsPackageVersion)
        compileOnly platform ("org.alfresco:acs-community-packaging:${acsPackageVersion}")
        compileOnly('org.json:json') { transitive = false }
        compileOnly("org.alfresco.surf:spring-webscripts")
    }
}