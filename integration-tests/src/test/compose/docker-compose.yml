version: "2.2"

services:
  alfresco:
    image: ${DOCKER_IMAGE}
    environment:
      - GLOBAL_db.driver=org.postgresql.Driver
      - GLOBAL_db.username=alfresco
      - GLOBAL_db.password=alfresco
      - GLOBAL_db.url=jdbc:postgresql://postgres:5432/alfresco
      - GLOBAL_index.subsystem.name=noindex
      - GLOBAL_jodconverter.enabled=false
      - GLOBAL_messaging.broker.url=nio://activemq:61616
      - GLOBAL_local.transform.service.enabled=false
      - GLOBAL_legacy.transform.service.enabled=false
#      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/alfresco"]
      interval: 1s
      timeout: 3s
      retries: 60

  postgres:
    image: ${POSTGRES_IMAGE}
    environment:
    - POSTGRES_PASSWORD=alfresco
    - POSTGRES_USER=alfresco
    - POSTGRES_DB=alfresco
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  haproxy:
    image: haproxy:alpine
    ports:
      - ${ALFRESCO_TCP_80:-8080:80}
    depends_on:
      alfresco:
        condition: service_healthy
    volumes:
      - ./haproxy:/usr/local/etc/haproxy:ro
    networks:
      - external
      - default


networks:
  default:
    internal: true

  external: